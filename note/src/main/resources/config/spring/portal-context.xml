<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	 xmlns:encryption="http://www.jasypt.org/schema/encryption"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
http://www.jasypt.org/schema/encryption http://www.jasypt.org/schema/encryption/jasypt-spring31-encryption-1.xsd"
	default-lazy-init="true">

	<!-- enable Spring AOP support -->
	<aop:aspectj-autoproxy proxy-target-class="true" />


	<!-- 定时器开关 开始 -->
	<task:executor id="myExecutor" pool-size="3" />
	<task:scheduler id="myScheduler" pool-size="5" />
	<task:annotation-driven executor="myExecutor"
		scheduler="myScheduler" />

	<!-- 不扫描带有@Controller注解的类。因为这些类已经随容器启动时，在servlet-context中扫描过一遍了 -->
	<context:component-scan base-package="com.jayu.note">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>


	<!-- controller层的属性和配置文件读入 ,多个用逗号隔开
	<context:property-placeholder location="classpath:/config/properties/config.properties,classpath:/config/properties/jdbc.properties,classpath:/config/properties/mail.properties" /> 
 	-->
	<!-- 加密机配置  -->
  <encryption:encryptor-config id="encryptor-config" password="note.icityshops.com"  algorithm="PBEWithMD5AndDES"/>
  <!-- 字符串加密机  -->
  <encryption:string-encryptor id="stringEnc" string-output-type="base64"  config-bean="encryptor-config"/>
  
  <!-- 加密的属性占位符  -->
  <encryption:encryptable-property-placeholder encryptor="stringEnc" location="classpath:/config/properties/config.properties,classpath:/config/properties/jdbc.properties,classpath:/config/properties/mail.properties"/>

	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外， 该注解一定要声明在spring主配置文件中才会生效 -->
	<cache:annotation-driven cache-manager="ehCacheManager" />
	<!-- cacheManager工厂类，指定ehcache.xml的位置 -->
	<bean id="cacheManagerFactory"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:/config/cache/ehcache.xml" p:shared="true" />
	<!-- 声明cacheManager -->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
		p:cacheManager-ref="cacheManagerFactory" />
	<!-- JCaptcha 图片验证码 -->
	<import resource="portal-context-common.xml" />
	<!--数据库 -->
	<import resource="portal-context-db.xml" />
	<!--email -->
	<import resource="portal-mail.xml" />

	<!--<import resource="quartz-context.xml" /> -->
</beans>

